---
layout:     post
title:      Time series forecasting
date:       2016-09-18 15:31:19
summary:    How to approach forecasting of multiple interdependent time series and reduce forecasting error twice [spoiler]
categories: time_series, research
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r include=FALSE}
library(openxlsx)
library(data.table)
library(tm)
library(wordcloud2)
library(SnowballC)
library(lubridate)
library(xts)
library(highcharter)

cleanCorpus <- function(corpus){
  corpus.tmp <- tm_map(corpus, removePunctuation)
  corpus.tmp <- tm_map(corpus.tmp,tolower)
  corpus.tmp <- tm_map(corpus.tmp, removeNumbers)
  corpus.tmp <- tm_map(corpus.tmp, PlainTextDocument)
  # corpus.tmp <- tm_map(corpus.tmp, stemDocument)
  corpus.tmp <- tm_map(corpus.tmp,removeWords, stopwords("english"))
  return(corpus.tmp)
}

wordcloud_df<-function(corpus){
  t.tdm <- TermDocumentMatrix(corpus)
  TDMasMatrix <- as.matrix(t.tdm)
  TDMasDF<-data.frame(TDMasMatrix)
  TDMasDF$words <-rownames(TDMasDF)
  colnames(TDMasDF) <- c("freq", "word")
  TDMasDF<-TDMasDF[order(-TDMasDF$freq),]
  TDMasDF<-TDMasDF[, c("word", "freq")]
  TDMasDF
}

email<-as.data.table(read.xlsx("data/email.xlsx", sheet = 1, startRow = 1, colNames = TRUE))
email<-email[,-c(7,8),with=F]
email<-email[-c(1:223),]
email<-email[!is.na(email$Received),]
email$Received<-as.Date(as.numeric(email$Received),origin="1899-12-30")
```


### Mail volumes

```{r echo=FALSE, fig.height=2, fig.width =4}

email_ag<-email[,.N,by=.(Received)]
email_ag<-email_ag[!is.na(email_ag$Received),]
email_ts<-as.xts(email_ag)
highchart(type = "stock") %>% 
  hc_title(text = "Daily email volumes") %>% 
  hc_add_series_xts(email_ts, id = "usdjpy") %>%
  hc_rangeSelector(inputEnabled = FALSE) %>% 
  hc_scrollbar(enabled = FALSE)   %>%
hc_credits(enabled = TRUE,text = "alexakimenko.github.io",href = "http://alexakimenko.github.io") 

email_ag$weekday_num<-as.POSIXlt(email_ag$Received)$wday + 1
email_ag$weekday<-c("Sunday","Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")[email_ag$weekday_num]
email_ag$month<-month(email_ag$Received)
email_weekday<-email_ag[,.(volumes=round(mean(N))),by=.(weekday,weekday_num,month)]
email_weekday$weekday<-as.factor(email_weekday$weekday)
email_weekday$weekday<-factor(email_weekday$weekday,levels=c("Sunday","Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
email_weekday<-email_weekday[order(weekday_num)]
email_weekday_t<-email_weekday[,.(volumes=round(mean(volumes))),by=.(weekday,weekday_num)]


hchart(email_weekday,x = weekday, y = volumes, type = "line",group = month) %>% 
  hc_add_series(data = email_weekday_t$volumes, type = "spline",name="Total",color="firebrick",lineWidth=5)%>% 
  hc_title(text = "Avearge number of emails by weekday and month")  %>%
hc_credits(enabled = TRUE,text = "alexakimenko.github.io",href = "http://alexakimenko.github.io") 

```


### Mail subject

```{r echo=FALSE, fig.height=8, fig.width =9}
email_corpus <-  Corpus(VectorSource( toString(email$Subject) ))
email_corpus <- cleanCorpus(email_corpus)
email_copus_df<-wordcloud_df(email_corpus)
wordcloud2(email_copus_df[email_copus_df$freq>40,], size = 0.8,color="lightcoral", fontFamily="Arial")

```
